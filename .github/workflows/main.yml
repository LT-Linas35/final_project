name: CI pipeline with Trivy and Docker image publish

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to use'
        required: true
        default: 'latest'

permissions:
  contents: read

jobs:
  trivy:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Build and check with Trivy
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          cd server
          docker build --secret id=NEW_RELIC_API_KEY_PHP,src=${{ secrets.NEW_RELIC_API_KEY_PHP }} \
                       --secret id=NEW_RELIC_ACCOUNT_ID_PHP,src=${{ secrets.NEW_RELIC_ACCOUNT_ID_PHP }} \
                       -t docker.io/linas37/nextcloud:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'docker.io/linas37/nextcloud:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check Trivy scan results
        run: |
          if grep -q '"ruleId":' trivy-results.sarif; then
            echo "Critical or High vulnerabilities found!"
            exit 1
          else
            echo "No critical or high vulnerabilities found."
          fi
          
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: linas37/nextcloud
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:server" 
          push: true
          tags: |
            linas37/nextcloud:${{ github.sha }}
            linas37/nextcloud:latest
            linas37/nextcloud:${{ github.event.inputs.release_version }}
          secrets: |
            id=NEW_RELIC_API_KEY_PHP,src=${{ secrets.NEW_RELIC_API_KEY_PHP }}
            id=NEW_RELIC_ACCOUNT_ID_PHP,src=${{ secrets.NEW_RELIC_ACCOUNT_ID_PHP }}
          labels: ${{ steps.meta.outputs.labels }}
      - 
        name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: docker.io/linas37/nextcloud
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true  
