name: CI/CD pipeline with Trivy and Docker image publish

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to use'
        required: true
        default: 'latest'

permissions:
  contents: read

jobs:
  trivy:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          cd server
          docker build -t docker.io/linas37/nextcloud:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'docker.io/linas37/nextcloud:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check Trivy scan results
        run: |
          if grep -q '"ruleId":' trivy-results.sarif; then
            echo "Critical or High vulnerabilities found!"
            exit 1
          else
            echo "No critical or high vulnerabilities found."
          fi
  publish_docker:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    needs: trivy  
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
      with:
        sparse-checkout: server

    - name: Log in to Docker Hub
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: linas37/nextcloud

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v4
      with:
        context: "{{defaultContext}}:server"  
 #        file: ./Dockerfile      
        push: true
        tags: |
          linas37/nextcloud:${{ github.sha }}
          linas37/nextcloud:latest
          linas37/nextcloud:${{ github.event.inputs.release_version }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: docker.io/linas37/nextcloud
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true  
